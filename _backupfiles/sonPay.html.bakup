<!-- 正文开始 -->
<div class="layui-fluid">
    <div class="layui-card">
        <div class="layui-card-body">
            <form class="layui-form toolbar">
                <br>
                <div class="layui-form-item">
                    <div class="layui-inline">
                        <a href="javascript:;" class="layui-btn layui-icon layui-icon-search searcshs"
                            data-type="Today">&nbsp;今日</a>
                    </div>
                    <div class="layui-inline">
                        <a href="javascript:;" class="layui-btn layui-icon layui-icon-search searcshs"
                            data-type="Yesterday">&nbsp;昨日</a>
                    </div>
                    <div class="layui-inline">
                        <a href="javascript:;" class="layui-btn layui-icon layui-icon-search searcshs"
                            data-type="ThisWeek">&nbsp;本周</a>
                    </div>
                    <div class="layui-inline">
                        <a href="javascript:;" class="layui-btn layui-icon layui-icon-search searcshs"
                            data-type="LastWeek">&nbsp;上周</a>
                    </div>
                    <div class="layui-inline">
                        <a href="javascript:;" class="layui-btn layui-icon layui-icon-search searcshs"
                            data-type="ThisMonth">&nbsp;本月</a>
                    </div>
                    <div class="layui-inline">
                        <a href="javascript:;" class="layui-btn layui-icon layui-icon-search searcshs"
                            data-type="LastMonth">&nbsp;上月</a>
                    </div>
                    <div class="layui-inline">
                        <a href="javascript:;" class="layui-btn layui-icon layui-icon-search searcshs"
                            data-type="HalfYear">&nbsp;半年</a>
                    </div>
                    <div class="layui-inline">
                        <a href="javascript:;" class="layui-btn layui-icon layui-icon-search searcshs"
                            data-type="All">&nbsp;所有</a>
                    </div>
                    <div class="layui-inline">
                        <input type="text" class="layui-input" id="start1" placeholder="自定义开始时间">
                    </div>
                    <div class="layui-inline">
                        <input type="text" class="layui-input" id="start2" placeholder="自定义结束时间">
                    </div>
                    <div class="layui-inline">
                        <a href="javascript:;" class="layui-btn layui-icon layui-icon-search" id="searcsh">&nbsp; 搜索</a>
                    </div>

                </div>
            </form>
            <!-- 数据表格 -->
            <table id="indexPayTable" lay-filter="indexPayTable"></table>
            <div class="layui-container">
                <div class="layui-row">
                    <div class="layui-col-md3">
                        <p> <span class="times" style="color: red;">所有</span></p>
                    </div>
                    <div class="layui-col-md3">
                        <p> 点击:<span id="clicks">0</span></p>
                    </div>
                    <div class="layui-col-md3">
                        <p> PC:<span id="consumeClickPc">0</span></p>
                    </div>
                    <div class="layui-col-md3">
                        <p> Mobile:<span id="consumeClickMobile">0</span></p>
                    </div>
                </div>
                <div class="layui-row">
                    <div class="layui-col-md3">
                        <p> <span class="times" style="color: red;">所有</span></p>
                    </div>
                    <div class="layui-col-md3">
                        <p> 消费:<span id="totals">0</span></p>
                    </div>
                    <div class="layui-col-md3">
                        <p> PC:<span id="consumeTotalPc">0</span></p>
                    </div>
                    <div class="layui-col-md3">
                        <p> Mobile:<span id="consumeTotalMobile">0</span></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 表格操作列 -->
<script type="text/html" id="indexTbBar">
    <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
</script>
<!-- 表格状态列 -->

<!-- 表单弹窗 -->


<!-- js部分 -->
<script>
    layui.use(['layer', 'form', 'upload', 'table', 'util', 'admin', 'xmSelect', 'laydate'], function () {
        var $ = layui.jquery;
        var layer = layui.layer;
        var form = layui.form;
        var table = layui.table;
        var util = layui.util;
        var admin = layui.admin;
        var xmSelect = layui.xmSelect;
        var upload = layui.upload;
        var loadingIndex
        var s = window.localStorage
        var start_time = '';
        var end_time = '';
        var pageRole = s.getItem('userid');
        var roles = window.localStorage.getItem('adminid_' + pageRole)
        var ins2Tb;

        //  为了区分管理员客服与代理商编辑的权限, false不可编辑
        var edit = 'false';
        var hiide = true;
        var toolbar = [];
        if (roles == 6 || roles == 1) {
            edit = 'text';
            hiide = false
            toolbar = ['<p>',
                '<button lay-event="delAll" class="layui-btn layui-btn-danger layui-btn-sm icon-btn"><i class="layui-icon">&#xe654;</i>批量删除</button>&nbsp;',
                '<button lay-event="resetAll" class="layui-btn layui-btn-normal layui-btn-sm icon-btn"><i class="layui-icon">&#xe654;</i>一键还原</button>&nbsp;',
                // '<button lay-event="del" class="layui-btn layui-btn-sm layui-btn-danger icon-btn"><i class="layui-icon">&#xe640;</i>删除</button>',
                '</p>'];

        }
        /* 渲染表格 */
        var ins2Tb = table.render({
            elem: '#indexPayTable',
            url: req('adminConsume') + '?uid=' + pageRole,
            // url: layui.setter.baseServer + 'user.json',
            page: true,
            request: {
                pageName: 'p'
                , limitName: 'num'
            }
            , where: {
                text: 1
            },
            done: function (res, curr, count) {
                //如果是异步请求数据方式，res即为你接口返回的信息。
                //如果是直接赋值的方式，res即为：{data: [], count: 99} data为当前页数据、count为数据总长度
                $('#clicks').html(res.statistics.clicks)
                $('#consumeClickMobile').html(res.statistics.consumeClickMobile)
                $('#consumeClickPc').html(res.statistics.consumeClickPc)
                $('#consumeTotalMobile').html(res.statistics.consumeTotalMobile)
                $('#consumeTotalPc').html(res.statistics.consumeTotalPc)
                $('#totals').html(res.statistics.totals)
            }
            , parseData: function (res) { //res 即为原始返回的数据
                return {
                    "code": 0, //解析接口状态
                    "msg": res.data, //解析提示文本
                    "count": res.count, //解析数据长度
                    "data": res.data, //解析数据列表
                    "statistics": res.statistics //解析数据列表
                };
            },
            toolbar: toolbar.join(''),
            cellMinWidth: 100,
            cols: [[
                { type: 'checkbox', hide: hiide },
                { field: 'id', title: 'id', sort: true, align: 'center', width: '5%' },
                // {field: 'status', title: '类型', sort: true},
                { field: 'name', title: '消费用户', sort: true, align: 'center', width: '10%' },
                { field: 'antistop', title: '关键词', sort: true, align: 'center', width: '10%', edit: edit },
                { field: 'goods_id', title: '商品 ID', sort: true, align: 'center', width: '10%', edit: edit },
                { field: 'goods_title', title: '商品关键词', sort: true, align: 'center', width: '10%' },
                { field: 'money', title: '金额', sort: true, align: 'center', width: '10%', edit: edit },
                { field: 'pv', title: '展现', sort: true, width: '10%', edit: edit },
                { field: 'clicks', title: '点击', sort: true, width: '10%', edit: edit },
                { field: 'click_ratio', title: '点击率(%)', sort: true, width: '10%' },
                { field: 'ip', title: 'IP', sort: true, width: '12%', edit: edit },
                { field: 'area', title: '省', sort: true, align: 'center', width: '10%', edit: edit },
                { field: 'city', title: '市', sort: true, align: 'center', width: '10%', edit: edit },
                <!--{ field: 'operation', title: '运营商', sort: true, align: 'center', width: '20%', edit: edit },-->
                { field: 'consumer', title: '客户端', sort: true, align: 'center', width: '10%', edit: edit },
                { field: 'add_time', title: '时间', sort: true, width: '15%', edit: edit },
                { title: '操作', toolbar: '#indexTbBar', align: 'center', minWidth: 250, hide: hiide }
            ]]
        });

        // 表格单元框编辑
        table.on('edit(indexPayTable)', function (obj) {
            var value = obj.value //得到修改后的值
                , data = obj.data //得到所在行所有键值
                , field = obj.field; //得到字段
            var idf = data.id;

            // pageRole 用户id
            // id
            // field
            // fieldname
            // uid
            // data
            var fieldName = '';
            switch (field) {
                case 'money':
                    fieldName = '金额';
                    break;
                case 'ip':
                    fieldName = 'IP';
                    break;
                case 'area':
                    fieldName = '省';
                    break;
                case 'city':
                    fieldName = '市';
                    break;
                case 'operator':
                    fieldName = '运营商';
                    break;
                case 'antistop':
                    fieldName = '关键词';
                    break;
                case 'consumer':
                    fieldName = '客户端';
                    break;
                case 'add_time':
                    fieldName: '时间';
                    break;
            }

            $.post(req('editFinance'), {
                fieldName: fieldName,
                field: field,
                data: value,
                id: data.id,
                uid: pageRole
            }, function (r) {

            }, 'json')



            layer.msg('[ID: ' + data.id + '] ' + fieldName + ' 更改为：' + value);
        });


        $('#searcsh').click(function () {
            ins2Tb.reload({ where: { start_time: start_time, end_time: end_time }, page: { curr: 1 } });
            return false;
        })

        $('.searcshs').click(function () {

            $('#clicks').html(0)
            $('#consumeClickMobile').html(0)
            $('#consumeClickPc').html(0)
            $('#consumeTotalMobile').html(0)
            $('#consumeTotalPc').html(0)
            $('#totals').html(0)

            $('.times').html($(this).html());

            var now = new Date(); //当前日期
            var nowDayOfWeek = now.getDay() - 1; //今天本周的第几天
            var nowDay = now.getDate(); //当前日
            var nowMonth = now.getMonth(); //当前月
            var nowYear = now.getYear(); //当前年
            nowYear += (nowYear < 2000) ? 1900 : 0; //
            var lastMonthDate = new Date(); //上月日期
            lastMonthDate.setDate(1);
            lastMonthDate.setMonth(lastMonthDate.getMonth() - 1);
            var lastYear = lastMonthDate.getYear();
            var lastMonth = lastMonthDate.getMonth();

            //格式化日期：yyyy-MM-dd
            function formatDate(date) {
                var myyear = date.getFullYear();
                var mymonth = date.getMonth() + 1;
                var myweekday = date.getDate();
                if (mymonth < 10) {
                    mymonth = "0" + mymonth;
                }
                if (myweekday < 10) {
                    myweekday = "0" + myweekday;
                }
                return (myyear + "-" + mymonth + "-" + myweekday);
            }
            //获得某月的天数
            function getMonthDays(myMonth) {
                var monthStartDate = new Date(nowYear, myMonth, 1);
                var monthEndDate = new Date(nowYear, myMonth + 1, 1);
                var days = (monthEndDate - monthStartDate) / (1000 * 60 * 60 * 24);
                return days;
            }
            //获得本季度的开始月份
            function getQuarterStartMonth() {
                var quarterStartMonth = 0;
                // if (nowMonth < 3) {
                //     quarterStartMonth = 0;
                // }
                // if (2 < nowMonth && nowMonth < 6) {
                //     quarterStartMonth = 3;
                // }
                // if (5 < nowMonth && nowMonth < 9) {
                //     quarterStartMonth = 6;
                // }
                // if (nowMonth > 8) {
                //     quarterStartMonth = 9;
                // }
                quarterStartMonth = 3;
                return quarterStartMonth;
            }
            //获得本周的开始日期
            function getWeekStartDate() {
                var weekStartDate = new Date(nowYear, nowMonth, nowDay - nowDayOfWeek);
                return formatDate(weekStartDate);
            }
            //获得本周的结束日期
            function getWeekEndDate() {
                var weekEndDate = new Date(nowYear, nowMonth, nowDay + (6 - nowDayOfWeek));
                return formatDate(weekEndDate);
            }
            //获得上周的开始日期
            function getLastWeekStartDate() {
                var weekStartDate = new Date(nowYear, nowMonth, nowDay - nowDayOfWeek - 7);
                return formatDate(weekStartDate);
            }
            //获得上周的结束日期
            function getLastWeekEndDate() {
                var weekEndDate = new Date(nowYear, nowMonth, nowDay - nowDayOfWeek - 1);
                return formatDate(weekEndDate);
            }
            //获得本月的开始日期
            function getMonthStartDate() {
                var monthStartDate = new Date(nowYear, nowMonth, 1);
                return formatDate(monthStartDate);
            }
            //获得本月的结束日期
            function getMonthEndDate() {
                var monthEndDate = new Date(nowYear, nowMonth, getMonthDays(nowMonth));
                return formatDate(monthEndDate);
            }
            //获得上月开始时间
            function getLastMonthStartDate() {
                if (lastMonth == 11) {
                    var lastMonthStartDate = new Date(nowYear - 1, lastMonth, 1);
                } else {
                    var lastMonthStartDate = new Date(nowYear, lastMonth, 1);
                }
                return formatDate(lastMonthStartDate);
            }
            //获得上月结束时间
            function getLastMonthEndDate() {
                if (lastMonth == 11) {
                    var lastMonthEndDate = new Date(nowYear - 1, lastMonth, getMonthDays(lastMonth));
                } else {
                    var lastMonthEndDate = new Date(nowYear, lastMonth, getMonthDays(lastMonth));
                }
                return formatDate(lastMonthEndDate);
            }
            //获得本季度的开始日期
            function getQuarterStartDate() {
                var quarterStartDate = new Date(nowYear, getQuarterStartMonth() - 3, 1);
                return formatDate(quarterStartDate);
            }
            //获得本季度的结束日期
            function getQuarterEndDate() {
                var quarterEndMonth = getQuarterStartMonth() + 2;
                var quarterStartDate = new Date(nowYear, quarterEndMonth,
                    getMonthDays(quarterEndMonth));
                return formatDate(quarterStartDate);
            }

            let startTimeSearchs = ''
            let endTimeSearchs = ''
            switch ($(this).attr('data-type')) {
                case 'Today':
                    startTimeSearchs = util.toDateString(now, 'yyyy-MM-dd 00:00:00')
                    endTimeSearchs = util.toDateString(now, 'yyyy-MM-dd 23:59:59')
                    break;
                case 'Yesterday':
                    startTimeSearchs = util.toDateString(now.setTime(now.getTime() - 24 * 60 * 60 * 1000), 'yyyy-MM-dd 00:00:00')
                    endTimeSearchs = util.toDateString(now.setTime(now.getTime() - 24 * 60 * 60 * 1000), 'yyyy-MM-dd 23:59:59')
                    break;
                case 'ThisWeek':
                    startTimeSearchs = getWeekStartDate() + ' 00:00:00'
                    endTimeSearchs = getWeekEndDate() + ' 23:59:59'
                    break;
                case 'LastWeek':
                    startTimeSearchs = getLastWeekStartDate() + ' 00:00:00'
                    endTimeSearchs = getLastWeekEndDate() + ' 23:59:59'
                    break;
                case 'ThisMonth':
                    startTimeSearchs = getMonthStartDate() + ' 00:00:00'
                    endTimeSearchs = getMonthEndDate() + ' 23:59:59'
                    break;
                case 'LastMonth':
                    startTimeSearchs = getLastMonthStartDate() + ' 00:00:00'
                    endTimeSearchs = getLastMonthEndDate() + ' 23:59:59'
                    break;
                case 'HalfYear':
                    startTimeSearchs = getQuarterStartDate() + ' 00:00:00'
                    endTimeSearchs = getQuarterEndDate() + ' 23:59:59'
                    break;
                case 'All':
                    startTimeSearchs = ''
                    endTimeSearchs = ''
                    break;
                default:
                    startTimeSearchs = ''
                    endTimeSearchs = ''
                    break;
            }
            ins2Tb.reload({ where: { start_time: startTimeSearchs, end_time: endTimeSearchs }, page: { curr: 1 } });
            return false;
        })

        var laydate = layui.laydate;

        //执行一个laydate实例
        laydate.render({
            elem: '#start1', //指定元素
            done: function (value, date, endDate) {
                start_time = value
            }
        });
        laydate.render({
            elem: '#start2', //指定元素
            done: function (value, date, endDate) {
                end_time = value
            }
        });



        /* 表格搜索 */
        form.on('submit(userTbSearch)', function (data) {
            insTb.reload({ where: data.field, page: { curr: 1 } });
            return false;
        });


        // 下拉框
        form.on('select(text)', () => {
            text = $('#text').val()
            insTb.reload({ page: { page: 1 }, where: { text: text, id: ID } });
        })

        /* 表格工具条点击事件 */
        table.on('tool(indexPayTable)', function (obj) {
            if (obj.event === 'del') {
                doDel([obj.data.id])
            }
        });

        /*表格头部按钮*/
        table.on('toolbar(indexPayTable)', function (obj) {
            if (obj.event == 'delAll') {
                var checkRows = table.checkStatus('indexPayTable');
                if (checkRows.data.length === 0) {
                    layer.msg('请选择要删除的数据', { icon: 2 });
                    return;
                }
                var ids = checkRows.data.map(function (d) {
                    return d.id;
                });
                doDel(ids);
            } else if (obj.event == 'resetAll') {
                var checkRows = table.checkStatus('indexPayTable');
                if (checkRows.data.length === 0) {
                    layer.msg('请选择要删除的数据', { icon: 2 });
                    return;
                }
                var ids = checkRows.data.map(function (d) {
                    return d.id;
                });
                resetAll(ids)
            }
        })

        function resetAll() {
            layer.confirm('确定要还原数据么?', function () {
                var loadIndex = layer.load(2);
                $.post(req('apiClick'), {
                    id: ids
                }, function (res) {
                    layer.close(loadIndex);
                    ins2Tb.reload();
                    if (res.status != 2) {
                        layer.msg(res.msg, { icon: 1 });
                        ins2Tb.reload();
                    } else {
                        layer.msg(res.msg, { icon: 2 });
                    }
                }, 'json');
            })
        }

        /* 删除 */
        function doDel(ids) {
            // console.log(obj)
            // return false
            layer.confirm('确定要删除选中数据吗？', {
                skin: 'layui-layer-admin',
                shade: .1
            }, function (i) {
                layer.close(i);
                var loadIndex = layer.load(2);
                $.post(req('conDel'), {
                    id: ids
                }, function (res) {
                    layer.close(loadIndex);
                    ins2Tb.reload();
                    if (res.status != 2) {
                        layer.msg(res.msg, { icon: 1 });
                        ins2Tb.reload();
                    } else {
                        layer.msg(res.msg, { icon: 2 });
                    }
                }, 'json');
            });
        }

    });
</script>
